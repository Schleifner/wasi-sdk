diff --git a/libcxxabi/src/abort_message.cpp b/libcxxabi/src/abort_message.cpp
index 859a5031b93f..f1497bc33d50 100644
--- a/libcxxabi/src/abort_message.cpp
+++ b/libcxxabi/src/abort_message.cpp
@@ -9,6 +9,7 @@
 #include <stdlib.h>
 #include <stdio.h>
 #include <stdarg.h>
+#include <string.h>
 #include "abort_message.h"
 
 #ifdef __BIONIC__
@@ -26,54 +27,11 @@
 #   define _LIBCXXABI_USE_CRASHREPORTER_CLIENT
 #endif
 
+extern "C" void logError(const void* ptr, int32_t size);
+
 void abort_message(const char* format, ...)
 {
-    // Write message to stderr. We do this before formatting into a
-    // variable-size buffer so that we still get some information if
-    // formatting into the variable-sized buffer fails.
-#if !defined(NDEBUG) || !defined(LIBCXXABI_BAREMETAL)
-    {
-        fprintf(stderr, "libc++abi: ");
-        va_list list;
-        va_start(list, format);
-        vfprintf(stderr, format, list);
-        va_end(list);
-        fprintf(stderr, "\n");
-    }
-#endif
-
-    // Format the arguments into an allocated buffer. We leak the buffer on
-    // purpose, since we're about to abort() anyway.
-#if defined(_LIBCXXABI_USE_CRASHREPORTER_CLIENT)
-    char* buffer;
-    va_list list;
-    va_start(list, format);
-    vasprintf(&buffer, format, list);
-    va_end(list);
-
-    CRSetCrashLogMessage(buffer);
-#elif defined(__BIONIC__)
-    char* buffer;
-    va_list list;
-    va_start(list, format);
-    vasprintf(&buffer, format, list);
-    va_end(list);
-
-#   if __ANDROID_API__ >= 21
-    // Show error in tombstone.
-    android_set_abort_message(buffer);
-
-    // Show error in logcat.
-    openlog("libc++abi", 0, 0);
-    syslog(LOG_CRIT, "%s", buffer);
-    closelog();
-#   else
-    // The good error reporting wasn't available in Android until L. Since we're
-    // about to abort anyway, just call __assert2, which will log _somewhere_
-    // (tombstone and/or logcat) in older releases.
-    __assert2(__FILE__, __LINE__, __func__, buffer);
-#   endif // __ANDROID_API__ >= 21
-#endif // __BIONIC__
+    logError(format, strlen(format));
 
     abort();
 }
